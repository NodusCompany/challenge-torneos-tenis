{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/atpgrandslam/src/components/App.js\";\nimport React from \"react\";\nimport logo from \"../assets/img/logo.svg\";\nimport \"../assets/css/App.css\";\nimport Header from '../components/Header';\nimport Sidebar from \"../components/Sidebar\";\nimport Result from \"../components/Result\";\nexport default class App extends React.Component {\n  constructor() {\n    super();\n\n    this.listResuls = () => {\n      fetch(\"http://localhost/atpgrandslam/src/api/\").then(res => res.json()).then(data => {\n        if (data.status) {\n          this.setState({\n            resultData: data.data,\n            loader: false\n          });\n        } else {\n          alert(data.message);\n        }\n      });\n    };\n\n    this.openSidebarInfo = data => {\n      console.log(data);\n      this.setState({\n        sidebar: true,\n        playerName: data.player_name,\n        tourneyYear: data.winnerLast,\n        tourneyLocation: data.tourney_location,\n        tourneyDate: data.tourney_dates\n      });\n    };\n\n    this.closeSidebarInfo = () => {\n      this.setState({\n        sidebar: false\n      });\n    };\n\n    this.state = {\n      resultData: [],\n      loader: true,\n      sidebar: false,\n      playerName: \"\",\n      tourneyYear: 0,\n      tourneyLocation: \"\",\n      tourneyDate: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.listResuls();\n  }\n\n  render() {\n    const _this$state = this.state,\n          resultData = _this$state.resultData,\n          loader = _this$state.loader,\n          sidebar = _this$state.sidebar;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"tableResul\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Result, {\n      resultData: resultData,\n      openSidebarInfo: this.openSidebarInfo,\n      loader: loader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Sidebar, {\n      sidebar: sidebar,\n      playerName: this.state.playerName,\n      tourneyYear: this.state.tourneyYear,\n      tourneyLocation: this.state.tourneyLocation,\n      tourneyDate: this.state.tourneyDate,\n      closeSidebarInfo: this.closeSidebarInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/atpgrandslam/src/components/App.js"],"names":["React","Header","Sidebar","Result","App","Component","constructor","listResuls","fetch","then","res","json","data","status","setState","resultData","loader","alert","message","openSidebarInfo","console","log","sidebar","playerName","player_name","tourneyYear","winnerLast","tourneyLocation","tourney_location","tourneyDate","tourney_dates","closeSidebarInfo","state","componentDidMount","render","logo"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport logo from \"../assets/img/logo.svg\";\nimport \"../assets/css/App.css\";\nimport Header from '../components/Header'\nimport Sidebar from \"../components/Sidebar\";\nimport Result from \"../components/Result\";\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      resultData: [],\n      loader: true,\n      sidebar: false,\n      playerName: \"\",\n      tourneyYear: 0,\n      tourneyLocation: \"\",\n      tourneyDate: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.listResuls();\n  }\n\n  listResuls = () => {\n    fetch(\"http://localhost/atpgrandslam/src/api/\")\n      .then(res => res.json())\n      .then(data => {\n        if(data.status){\n          this.setState({ resultData: data.data, loader: false });\n        } else{\n          alert(data.message);\n        }\n       \n      });\n  };\n\n  openSidebarInfo = data => {\n    console.log(data);\n    this.setState({\n      sidebar: true,\n      playerName: data.player_name,\n      tourneyYear: data.winnerLast,\n      tourneyLocation: data.tourney_location,\n      tourneyDate: data.tourney_dates\n    });\n  };\n\n  closeSidebarInfo = () => {\n    this.setState({ sidebar: false });\n  };\n\n  render() {\n    const { resultData, loader, sidebar } = this.state;\n\n    return (\n      <React.Fragment>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          </header>\n          <div className=\"tableResul\">\n            <Header />\n\n            <Result \n              resultData = {resultData}\n              openSidebarInfo = {this.openSidebarInfo}\n              loader = {loader}\n            />\n\n            <Sidebar\n              sidebar={sidebar}\n              playerName={this.state.playerName}\n              tourneyYear={this.state.tourneyYear}\n              tourneyLocation={this.state.tourneyLocation}\n              tourneyDate={this.state.tourneyDate}\n              closeSidebarInfo={this.closeSidebarInfo}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}